import streamlit as st
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.prompts import PromptTemplate
import os
import yaml

# Fun√ß√£o para carregar configura√ß√£o
def load_config():
    try:
        with open('config.yaml', 'r') as config_file:
            config = yaml.safe_load(config_file)
        return config
    except Exception as e:
        st.error(f"Erro ao carregar a configura√ß√£o: {e}")
        return None

# Fun√ß√£o para inicializar o modelo AI
def initialize_ai_model(api_key):
    try:
        os.environ['GOOGLE_API_KEY'] = api_key
        model = ChatGoogleGenerativeAI(model='gemini-pro')
        return model
    except Exception as e:
        st.error(f"Erro ao inicializar o modelo AI: {e}")
        return None

# Template do prompt
template = '''
Voc√™ √© um assistente chamado B√≠bliaGuia, um especialista em estudos b√≠blicos. Suas atribui√ß√µes incluem:
- Fornecer interpreta√ß√µes objetivas e imparciais do texto b√≠blico.
- Oferecer contexto hist√≥rico e cultural para passagens b√≠blicas.
- Explicar conceitos teol√≥gicos de forma clara e acess√≠vel.
- Responder a perguntas sobre a B√≠blia com precis√£o e sabedoria.
- Sugerir passagens relevantes para estudo com base nos interesses do usu√°rio.
- N√£o promover interpreta√ß√µes sect√°rias ou doutrinas espec√≠ficas.

Informa√ß√µes fornecidas pelo usu√°rio:
Nome: {nome}
Conhecimento pr√©vio: {conhecimento_previo}
Interesse principal: {interesse_principal}
Livro ou tema espec√≠fico: {livro_tema}
D√∫vida ou quest√£o: {duvida_questao}

Com base nessas informa√ß√µes, forne√ßa uma resposta personalizada, incluindo:
1. An√°lise detalhada da quest√£o ou tema proposto pelo usu√°rio.
2. Explica√ß√£o clara e contextualizada, considerando o n√≠vel de conhecimento do usu√°rio.
3. Refer√™ncias a passagens b√≠blicas relevantes.
4. Insights sobre o contexto hist√≥rico e cultural, quando aplic√°vel.
5. Sugest√µes para estudo adicional ou reflex√£o.
6. Esclarecimento de termos ou conceitos que possam ser desconhecidos para o usu√°rio.
7. Quando apropriado, apresente diferentes perspectivas interpretativas aceitas por estudiosos.

Forne√ßa respostas detalhadas, informativas e respeitosas. Use uma linguagem clara e acess√≠vel, considerando o n√≠vel de conhecimento do usu√°rio.

Formate a resposta utilizando Markdown para melhor legibilidade.
'''

prompt_template = PromptTemplate.from_template(template)

# Interface Streamlit
st.set_page_config(page_title="B√≠bliaGuia - Seu Assistente de Estudos B√≠blicos",  page_icon="üìñ", layout="wide")
st.title('B√≠bliaGuia - Seu Assistente Personalizado de Estudos B√≠blicos')

# Carregar configura√ß√£o
config = load_config()
if config is None:
    st.stop()

# Inicializar modelo AI
ai_model = initialize_ai_model(config['GOOGLE_API_KEY'])
if ai_model is None:
    st.stop()

# Criar colunas para layout
col1, col2 = st.columns(2)

with col1:
    nome = st.text_input('Nome:')
    conhecimento_previo = st.select_slider('N√≠vel de conhecimento b√≠blico:', 
                                           options=['Iniciante', 'Intermedi√°rio', 'Avan√ßado'])
    interesse_principal = st.selectbox('Interesse principal:', [
        'Estudo geral', 'Hist√≥ria b√≠blica', 'Teologia', 'Aplica√ß√£o pr√°tica',
        'Profecia', 'Arqueologia b√≠blica', 'L√≠nguas b√≠blicas'
    ])

with col2:
    livro_tema = st.text_input('Livro ou tema espec√≠fico (opcional):')
    duvida_questao = st.text_area('Sua d√∫vida ou quest√£o:')

if st.button('Obter Orienta√ß√£o B√≠blica'):
    if not all([nome, duvida_questao]):
        st.warning('Por favor, preencha seu nome e sua d√∫vida ou quest√£o.')
    else:
        try:
            prompt = prompt_template.format(
                nome=nome,
                conhecimento_previo=conhecimento_previo,
                interesse_principal=interesse_principal,
                livro_tema=livro_tema,
                duvida_questao=duvida_questao
            )

            response = ai_model.invoke(prompt)

            st.subheader('Resposta do B√≠bliaGuia:')
            st.markdown(response.content)

        except Exception as e:
            st.error(f"Ocorreu um erro ao gerar a resposta: {e}")

# Adicionar se√ß√£o de recursos adicionais
# Sidebar
st.sidebar.title("Sobre o B√≠bliaGuia")
st.sidebar.info("""
O B√≠bliaGuia √© uma ferramenta avan√ßada de estudo b√≠blico personalizada, 
desenvolvida pela AperData para facilitar e aprimorar a compreens√£o e o aprofundamento dos textos sagrados.
""")

st.sidebar.title("Entre em Contato")
st.sidebar.markdown("""
Para solu√ß√µes de IA sob medida ou suporte:

- üåê [aperdata.com](https://aperdata.com)
- üì± WhatsApp: **11 98854-3437**
- üìß Email: **gabriel@aperdata.com**
""")

# Configura√ß√µes de tema
if st.sidebar.checkbox("Modo Escuro"):
    st.markdown("""
    <style>
    .stApp {
        background-color: #2b2b2b;
        color: white;
    }
    </style>
    """, unsafe_allow_html=True)

# Configura√ß√µes de acessibilidade
font_size = st.sidebar.slider("Tamanho da Fonte", min_value=12, max_value=24, value=16)
st.markdown(f"""
<style>
    body {{
        font-size: {font_size}px;
    }}
</style>
""", unsafe_allow_html=True)
